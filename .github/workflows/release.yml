name: Create new release diffs
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of Backstage to release. If missing, the latest version will be used"
        required: false
        default: ""
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      BACKSTAGE_APP_NAME: backstagediffapp
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: "release-base"
      - name: Set @backstage/create-app version
        run: |
          echo "CREATE_APP_VERSION=${INPUT_VERSION:-$(npm view @backstage/create-app version)}" >> $GITHUB_ENV
          echo "::set-output name=backstage_version::$CREATE_APP_VERSION"
        env:
          INPUT_VERSION: ${{ inputs.version }}
      - name: Run @backstage/create-app
        run: printf "$BACKSTAGE_APP_NAME\n\t" | npx @backstage/create-app@${CREATE_APP_VERSION} --skip-install
      - name: Move all the files into the root directory
        run: cp -r {$BACKSTAGE_APP_NAME/*,$BACKSTAGE_APP_NAME/.*} .
      - name: Setup git bot user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Add release
        run: |
          git checkout -b release/${CREATE_APP_VERSION}
          git add -- . ':!$BACKSTAGE_APP_NAME'
          git commit -m "Release ${CREATE_APP_VERSION}"
          git push origin release/${CREATE_APP_VERSION}
      - run: echo "üçè This job's status is ${{ job.status }}."
  diff:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Check out diffs branch
        uses: actions/checkout@v2
        with:
          ref: "master"
      - name: Create new diffs
        run: |
          for version in $(jq -r 'keys |.[]' < releases.json); do
            echo "Creating diffs between version $version and $NEW_VERSION"
            git diff -U1 release/$version..release/$NEW_VERSION > diffs/$version..$NEW_VERSION.diff
          done
          jq '."$NEW_VERSION" = {}' < releases.json > releases.json
        env:
          NEW_VERSION: ${{needs.release.outputs.backstage_version}}"
      - name: Setup git bot user
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - name: Push the changes
        run: |
          git add .
          git commit -m "Add release ${NEW_VERSION}"
          git push
        env:
          NEW_VERSION: ${{needs.release.outputs.backstage_version}}"
